<?xml version="1.0" encoding="UTF-8"?>
<!--
当scan属性设置为true时，配置文件如果发生改变，将会被重新加载，默认值为true。
scanPeriod:
设置监测配置文件是否有修改的时间间隔，如果没有给出时间单位，默认单位是毫秒。当scan为true时，此属性生效。默认的时间间隔为1分钟。
debug:
当此属性设置为true时，将打印出logback内部日志信息，实时查看logback运行状态。默认值为false。
-->
<!--该规则是 logback 的核心。级别排序为： TRACE < DEBUG < INFO < WARN < ERROR-->
<configuration scan="true" debug="false">
    <!--定义日志文件的存储地址 勿在 LogBack 的配置中使用相对路径-->
    <property name="logs" value="/opt/coder/java/security/logs"/>
    <!--读取MySQL数据库配置文件信息-->
    <!--<property resource="db_logback.properties"></property>-->
    <timestamp key="bySecond" datePattern="yyyy-MM-dd HH:mm:ss"/>
    <contextName>${bySecond}</contextName>
    <!--<property name="APP_Name" value="${catalina.home}/logs"></property>-->

    <!-- 用于指定日志输出方式和输出格式 -->
    <!-- 将日志信息输入到控制台 -->
    <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
        <!-- 日志输出编码 -->
        <Encoding>utf8</Encoding>
        <encoder>
            <!-- %-20(%d{HH:mm:ss.SSS} [%thread]) %-5level %logger{80} - %msg%n -->
            <pattern>%-20(%d{HH:mm:ss.SSS} [%thread]) %-5level %logger{80} - %msg%n</pattern>
        </encoder>
        <!--格式化输出：inherited
        %d表示日期，
        %thread表示线程名，
        %-5level：级别从左显示5个字符宽度
        %msg：日志消息，
        %n是换行符-->
        <!--<layout class="ch.qos.logback.classic.PatternLayout">-->
        <!--<pattern>%-20(%d{HH:mm:ss.SSS} [%thread]) %-5level %logger{80} - %msg%n</pattern>-->
        <!--</layout>-->
    </appender>

    <!-- 将日志写入文件 -->
    <appender name="FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <Encoding>utf-8</Encoding>
        <!--如果是 true，日志被追加到文件结尾，如果是 false，清空现存文件，默认是true。-->
        <append>true</append>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!--日志文件输出的文件名-->
            <FileNamePattern>${logs}/logbackWeb.%d{yyyy-MM-dd}.log</FileNamePattern>
            <!--日志文件保留天数-->
            <MaxHistory>10</MaxHistory>
            <!--窗口索引最小值-->
            <minIndex>1</minIndex>
            <!--窗口索引最大值，当用户指定的窗口过大时，会自动将窗口设置为12-->
            <maxIndex>3</maxIndex>
        </rollingPolicy>
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <!--格式化输出：%d表示日期，%thread表示线程名，%-5level：级别从左显示5个字符宽度%msg：日志消息，%n是换行符-->
            <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{50} - %msg%n</pattern>
        </encoder>
        <!--日志文件最大的大小-->
        <triggeringPolicy class="ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy">
            <MaxFileSize>10MB</MaxFileSize>
        </triggeringPolicy>

    </appender>

    <!--日志输出器 -->
    <!--name指定线程针对的包路径，level是日志级别，<appender-ref>定义使用那种appender-->
    <logger name="org.springframework.jdbc.core.StatementCreatorUtils"
            additivity="false" level="TRACE">
        <appender-ref ref="STDOUT"/>
    </logger>
    <logger name="org.springframework.jdbc.core" additivity="true">
        <level value="DEBUG"/>
        <appender-ref ref="STDOUT"/>
    </logger>
    <logger name="java.sql.Connection" additivity="true">
        <level value="DEBUG"/>
        <appender-ref ref="STDOUT"/>
    </logger>
    <logger name="java.sql.Statement" additivity="true">
        <level value="DEBUG"/>
        <appender-ref ref="STDOUT"/>
    </logger>
    <logger name="java.sql.PreparedStatement" additivity="true">
        <level value="DEBUG"/>
        <appender-ref ref="STDOUT"/>
    </logger>
    <logger name="java.sql.ResultSet" additivity="true">
        <level value="DEBUG"/>
        <appender-ref ref="STDOUT"/>
    </logger>

    <!-- 用来设置某一个包或者具体的某一个类的日志打印级别，包名要与实际项目一致 -->
    <!--<logger name="org.apache" level="DEBUG"/>-->
    <!-- 将级别为“DEBUG”及大于“DEBUG”的日志信息传递给root处理，本身并不打印 -->
    <!--<logger name="com.zxct.edu" level="DEBUG"/>-->

    <!-- 日志输出级别 name="jdbc.sqltiming"-->
    <!--<logger name="org.apache" level="DEBUG"/>-->
    <!-- 用来设置某一个包或者具体的某一个类的日志打印级别，包名要与实际项目一致 -->
    <!--<logger name="com.zxct.edu" level="DEBUG" />-->
    <!-- 将级别为“DEBUG”及大于“DEBUG”的日志信息传递给root处理，本身并不打印 -->

    <!--<logger name="com.zxct.edu" additivity="true">
        <level value="WARN" />
        <appender-ref ref="mysqlApper"/>
    </logger>-->

    <root level="DEBUG">
        <appender-ref ref="STDOUT"/>
        <appender-ref ref="FILE"/>
    </root>

</configuration>